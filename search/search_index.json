{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#about-equinix-labs","title":"About Equinix Labs","text":"<p>Equinix Labs offers workshops, proof of concepts, and tools for exploring and bootstrapping Equinix digital infrastructure including Fabric, Metal, and Network Edge.</p>"},{"location":"#about-the-workshop","title":"About the workshop","text":"<p>This workshop demonstrates the use of three Github Actions:</p> <ul> <li>https://github.com/equinix-labs/metal-project-action</li> <li>https://github.com/equinix-labs/metal-device-action</li> <li>https://github.com/equinix-labs/metal-sweeper-action</li> </ul> <p>The goal of this workshop is to create and run a GitHub Actions workflow that will:</p> <ul> <li>create a project</li> <li>provision a device in the project</li> <li>delete the project &amp; device</li> </ul>"},{"location":"#workshop-agenda","title":"Workshop agenda","text":"<p>This workshop is split into two parts:</p> Part Title Duration 1 Setup 10 minutes 2 Create a GitHub Actions workflow 10 minutes 3 Understanding your GitHub Actions workflow 10 minutes"},{"location":"images/CONTRIBUTING/","title":"Contributing","text":""},{"location":"images/CONTRIBUTING/#using-the-template","title":"Using the Template","text":"<p>This template project https://github.com/equinix-labs/equinix-labs-workshop is used for creating consistent workshop experiences on Equinix Labs.</p> <p>To create a new workshop, use the \"Use this template\" button on the project. Once you have your new project created, follow these steps:</p> <ol> <li>Search and replace \"equinix-labs-workshop\" with the name of the GitHub repo you created when using the template.</li> <li>Search and replace \"Workshop: Equinix Labs\" with the name of your workshop.</li> <li>You'll want to enable GitHub Pages for the project:</li> <li>Open https://github.com/equinix-labs/equinix-labs-workshop/settings/pages (this link works after following step 1)</li> <li>Control who can view and access your site: Public</li> <li>Source: Deploy from a branch</li> <li>Branch: gh-pages /(root)</li> <li>Update docs/index.md, the docs/part*.md files, and the markdown below for your workshop.</li> <li>Remove this \"Using the Template\" section.</li> </ol>"},{"location":"images/CONTRIBUTING/#previewing-changes","title":"Previewing Changes","text":"Bash<pre><code>pip install mkdocs mkdocs-material mkdocs-glightbox\nmkdocs serve\n</code></pre>"},{"location":"images/CONTRIBUTING/#publishing-changes","title":"Publishing Changes","text":"<p>This project is published to GitHub Pages using GitHub Actions upon merge.</p>"},{"location":"parts/conclusion/","title":"Conclusion","text":""},{"location":"parts/conclusion/#conclusion","title":"Conclusion","text":"<p>Thank you for participating in the workshop! Let's recap some of the key takeways that we've learned:</p> <ul> <li>Signed up for an Equinix Metal account and created an API key</li> <li>Installed the Equinix Metal CLI</li> <li>You created a code repository to use for running a GitHub Actions workflow.</li> <li>You configured a new GitHub Actions workflow using Equinix Metal GitHub Actions.</li> <li>You configured a secret to give your GitHub Actions workflow access to your Equinix Metal account</li> <li>You re-ren a failed GitHub Actions workflow to validate the secret you created</li> <li>You saw the output of the workflow on GitHub.</li> </ul>"},{"location":"parts/conclusion/#references","title":"References","text":"<ul> <li>GitHub Actions Docs</li> <li>Equinix Metal CLI Documentation</li> <li>Equinix Metal Pricing</li> </ul>"},{"location":"parts/conclusion/#next-steps","title":"Next Steps","text":""},{"location":"parts/conclusion/#resources","title":"Resources","text":"<p>Here are a few other resources to look at to continue your Equinix Metal journey:</p> <ul> <li>Deploy @ Equinix: A one-stop shop for blogs, guides, and plenty of other resources.</li> <li>Equinix Metal Docs: Equinix Metal official documentation.</li> <li>Equinix Metal APIs: Programmatically interact with Equinix Metal</li> <li>Equinix Labs: Provides SDKs and Terraform modultes for Infrastructure as Code tools.</li> <li>Equinix Community: A global community for customers and Equinix users.</li> </ul>"},{"location":"parts/part1/","title":"Part 1: Setup","text":"<p>To run this workshop you will need access to an Equinix Metal account and a GitHub account.  If you do not have an Equinix Metal account, you can create a new one following step 1 below.  If you do not have a GitHub account, you can create one by following the GitHub docs for creating an account.</p> <p>Note:  You are responsible for the cost of resources created in your Equinix Metal account while running this workshop.</p>"},{"location":"parts/part1/#steps","title":"Steps","text":""},{"location":"parts/part1/#1-create-an-equinix-metal-account","title":"1. Create an Equinix Metal account","text":"<p>If you have never used Equinix Metal before, don't worry, you just need 2 minutes to sign-up and create your first organization. If you have any doubt you can watch our Getting Started with Equinix Metal video.</p>"},{"location":"parts/part1/#2-create-an-api-key","title":"2. Create an API key","text":"<p>API keys in Metal can be tied to your user or to a single project. For this workshop we will need a user-level API key.</p> <p>Note: Project API keys do not have access to the entirety of the API; some endpoints can only be used by personal API keys.</p> <p>To create a new user API key, access your user Profile in the Equinix Metal console, click on the User Icon, and click My Profile.</p> <p></p> <ul> <li>Select the <code>API Keys</code> tab.</li> <li>Click on <code>+ Add New Key</code>.</li> <li>Create a new key with <code>Read/Write</code> permissions.</li> </ul> <p></p>"},{"location":"parts/part1/#3-optional-install-and-configure-metal-cli-to-verify-token","title":"3. (Optional) Install and Configure Metal CLI to verify token","text":"<p>If you like, you can confirm that your API key is working by installing and running <code>metal-cli</code>.</p> <p>You only need to download a binary to start enjoying <code>metal-cli</code>, but you may want to check out the different installation options.</p> <p>Once installed you need to configure your credentials. To do this, execute <code>metal init</code> and provide the requested information.</p> <p>Expected output:</p> Bash<pre><code>$ metal init\n\nEquinix Metal API Tokens can be obtained through the portal at https://console.equinix.com/.\nSee https://metal.equinix.com/developers/docs/accounts/users/ for more details.\n\nToken (hidden): \nOrganization ID [27703148-e7bf-4a2f-95cf-46e7dddb4bb8]: \nProject ID []: \n\nWriting /Users/Username/.config/equinix/metal.yaml\n</code></pre>"},{"location":"parts/part1/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>Can we create API keys without manually using the portal?</li> </ul>"},{"location":"parts/part2/","title":"2. Create GitHub Actions Workflow","text":""},{"location":"parts/part2/#part-2-create-a-github-actions-workflow","title":"Part 2: Create a GitHub Actions workflow","text":""},{"location":"parts/part2/#steps","title":"Steps","text":""},{"location":"parts/part2/#1-create-a-new-github-repository","title":"1. Create a new GitHub repository","text":"<p>Create a GitHub repository by clicking the following link: https://github.com/new?name=metal-github-actions-workshop</p> <p>The \"Repository name\" field will be pre-filled with <code>metal-github-actions-workshop</code>; if you prefer a different name feel free to change it.</p> <p>If the \"Owner\" field says \"Choose an owner\", you must click the dropdown and select a user or organization that will own the new repository.</p> <p></p> <p>For the purposes of this workshop, the other form fields can be ignored.  Click \"Create repository\" to create your new GitHub repository.</p> <p></p>"},{"location":"parts/part2/#2-configure-the-metal_auth_token-github-actions-secret-for-your-repository","title":"2. Configure the <code>METAL_AUTH_TOKEN</code> GitHub Actions secret for your repository","text":"<p>In order to run our GitHub Actions workflow, we need to tell GitHub Actions what API token to use for interactions with the Equinix Metal API.  The token we will use is the user-level API token you created in step 2 of part 1</p> <p>Click the <code>Settings</code> tab to navigate to the settings page for your repository.</p> <p></p> <p>On the left-hand side of the page, find the <code>Secrets and variables</code> option, click to expand it, and then click the <code>Actions</code> option underneath it.</p> <p></p> <p>Click the <code>New repository secret</code> button.  In the name field, type <code>METAL_AUTH_TOKEN</code>, and in the <code>Secret</code> field, paste your Equinix Metal API token.  Click <code>Add secret</code> to create the GitHub Actions secret.</p> <p></p>"},{"location":"parts/part2/#3-create-a-github-actions-workflow-for-your-repository","title":"3. Create a GitHub Actions workflow for your repository","text":"<p>Now that we have defined the <code>METAL_AUTH_TOKEN</code>, it's time to create and run our GitHub Actions workflow. Click the <code>Actions</code> tab to go to the GitHub Actions page for your repository.</p> <p></p> <p>On that page click the <code>set up a workflow yourself</code> link on the Actions page to open the form to create a new GitHub Actions workflow for your repository.</p> <p></p> <p>Copy and paste the yaml below into the text box on that page:</p> YAML<pre><code>name: 'metal-actions-example'\n\non:\n  workflow_dispatch:\n\njobs:\n  project:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Create temporary project\n      id: metal-project\n      uses: equinix-labs/metal-project-action@v0.14.1\n      with:\n        userToken: ${{ secrets.METAL_AUTH_TOKEN }}\n    - name: Use the Project SSH Key outputs (display it)\n      run: |\n        echo $PROJECT_PRIVATE_SSH_KEY\n        echo $PROJECT_PUBLIC_SSH_KEY\n      env:\n        PROJECT_PRIVATE_SSH_KEY: ${{ steps.metal-project.outputs.projectSSHPrivateKeyBase64 }}\n        PROJECT_PUBLIC_SSH_KEY: ${{ steps.metal-project.outputs.projectSSHPublicKey }}\n    - name: Use the Project ID outputs (display it)\n      run: |\n        echo Equinix Metal Project \"$PROJECT_NAME\" has ID \"$PROJECT_ID\"\n      env:\n        PROJECT_ID: ${{ steps.metal-project.outputs.projectID }}\n        PROJECT_NAME: ${{ steps.metal-project.outputs.projectName }}\n    - name: Create device in temporary project\n      uses: equinix-labs/metal-device-action@v0.2.1\n      continue-on-error: true\n      with:\n        metal_auth_token: ${{ steps.metal-project.outputs.projectToken }}\n        metal_project_id: ${{ steps.metal-project.outputs.projectID }}\n        metro: da\n        plan: m3.small.x86\n        os: ubuntu_22_04\n    - name: Delete temporary project &amp; device\n      uses: equinix-labs/metal-sweeper-action@v0.6.1\n      with:\n        authToken: ${{ secrets.METAL_AUTH_TOKEN }}\n        projectID: ${{ steps.metal-project.outputs.projectID }}\n</code></pre> <p>Click \"Commit changes\" to commit the GitHub Actions workflow to your repository (you may be prompted to click a second \"Commit\" button).</p>"},{"location":"parts/part2/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>Are there other ways to create a GitHub Actions workflow for your repository?</li> <li>How do you decide whether to configure a GitHub Actions secret or a GitHub Actions variable?</li> </ul>"},{"location":"parts/part3/","title":"3. Understanding Your GitHub Actions Workflow","text":""},{"location":"parts/part3/#part-3-understanding-your-github-actions-workflow","title":"Part 3: Understanding your GitHub Actions workflow","text":""},{"location":"parts/part3/#steps","title":"Steps","text":""},{"location":"parts/part3/#1-run-your-github-actions-workflow","title":"1. Run your GitHub Actions workflow","text":"<p>This GitHub Actions workflow is configured with a <code>workflow_dispatch</code> trigger, which means it has to be run manually.</p> <p>Click the <code>Actions</code> tab again.  You should see <code>metal-actions-example</code> listed on the left-hand side:</p> <p></p> <p>Click on <code>metal-actions-example</code> to see the details for that workflow</p> <p></p> <p>Click on the <code>Run workflow</code> button, and then click on the green button in the popup that appears:</p> <p></p> <p>After clicking the button, you may need to refresh the page to see the running workflow.  It should look like this:</p> <p></p> <p>In that view, the commit message (in this case, \"Commit main.yml\") is a link.  Click it to view the logs for the running workflow:</p> <p></p> <p>After a few minutes the workflow should complete successfully.</p>"},{"location":"parts/part3/#2-examine-the-workflow-logs","title":"2. Examine the workflow logs","text":"<p>By looking at the logs for the completed GitHub Actions workflow, we can see what steps the workflow performed and think of ways to modify those steps for different use cases.</p>"},{"location":"parts/part3/#21-creating-a-temporary-project","title":"2.1. Creating a temporary project","text":"<p>The first thing our workflow did--after building our custom GitHub Actions--was to create a temporary project using the <code>equinix-labs/metal-project-action</code> GitHub Action.  This action creates a new Equinix Metal project, creates a project token that only has access to the new project, and creates an SSH key inside the project.</p> <p>There are a number of benefits to using the project token created by <code>equinix-labs/metal-project-action</code> in our CI/CD workflows:</p> <ul> <li>The CI test is confined to manipulating (and potentially breaking) the test Project resources</li> <li>The Project Key can be disposed of with the disposal of the project</li> <li>Leaked project keys have a narrow window of usability and minimized splash radius</li> </ul>"},{"location":"parts/part3/#22-creating-a-temporary-device","title":"2.2. Creating a temporary device","text":"<p>Once the project is created, our workflow uses the <code>equinix-labs/metal-device-action</code>, configured with our limited-scope project token, to create an Equinix Metal device inside the temporary project.</p> <p>In this example, we simply create a device and wait for it to finish provisioning.  In a real CI/CD workflow you might customize the device by passing in userdata, and you could use the project SSH key to log in to that device to check that it is running the way you expect it to.</p>"},{"location":"parts/part3/#23-deleting-the-temporary-project-device","title":"2.3. Deleting the temporary project &amp; device","text":"<p>If a CI job fails, it may leave orphaned resources behind, which incur costs and pose security risks. These orphaned resources may also lead to failures in future jobs, whether because quotas are consumed or because other jobs find unexpected resources.</p> <p>To alleviate this, our workflow uses the <code>equinix-labs/metal-sweeper-action</code> GitHub Action to delete all devices in our temporary project and then delete the project itself. Because the project is not known in advance, our workflow must use the user token we provided in <code>METAL_AUTH_TOKEN</code> in order to delete the project.</p> <p>If you want to avoid putting user tokens into GitHub Actions secrets, you could create a dedicated, long-lived project for CI/CD testing instead of using <code>equinix-labs/metal-project-action</code>. In that case, you would configure GitHub Actions with a project token in <code>METAL_AUTH_TOKEN</code>, and you would configure <code>equinix-labs/metal-sweeper-action</code> with <code>keepProject: true</code> so that the sweeper will delete devices but will not attempt to delete the CI/CD project.</p>"},{"location":"parts/part3/#discussion","title":"Discussion","text":"<p>Before proceeding to the next part let's take a few minutes to discuss what we did. Here are some questions to start the discussion.</p> <ul> <li>Can you run additional tests on Equinix Metal resources before deleting them?</li> <li>What other events can trigger a GitHub Actions workflow?</li> <li>What kind of Equinix Metal resources can you create in a GitHub Actions workflow?</li> </ul>"}]}